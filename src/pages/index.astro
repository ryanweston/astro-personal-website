---
// import ArrowUpRight from '../components/ArrowUpRight.astro';
import Layout from '../layouts/Default.astro'; 
import Avatar from '../components/Avatar.astro'; 

const posts = await Astro.glob('../pages/posts/*.md')
// const nonDraftPosts = posts.filter((post) => !post.frontmatter.draft)
const sortedPosts = posts.sort((a, b) => Date.parse(b.frontmatter.pubDate) - Date.parse(a.frontmatter.pubDate));
---

<Layout title="Ryan Weston">
  <div class="mt-[25vh]">
    <div class="flex flex-row justify-between">
      <div class="flex flex-row space-x-5">
        <Avatar/>
        <div class="flex flex-col">
          <h1 class="text-base font-medium">Ryan Weston</h1>
          <h2 class="text-base">Engineer & designer</h2>
        </div> 
      </div> 
      <button id="theme-toggle" type="button" class=" h-8 w-8 flex items-center justify-center text-zinc-400 dark:text-zinc-500 hover:bg-zinc-100 dark:hover:bg-zinc-800 focus:outline-none focus:ring-4 focus:ring-gray-200 dark:focus:ring-gray-700 rounded-lg text-sm">
        <svg id="theme-toggle-dark-icon" class="hidden w-5 h-5" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path d="M17.293 13.293A8 8 0 016.707 2.707a8.001 8.001 0 1010.586 10.586z"></path></svg>
        <svg id="theme-toggle-light-icon" class="hidden w-5 h-5" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path d="M10 2a1 1 0 011 1v1a1 1 0 11-2 0V3a1 1 0 011-1zm4 8a4 4 0 11-8 0 4 4 0 018 0zm-.464 4.95l.707.707a1 1 0 001.414-1.414l-.707-.707a1 1 0 00-1.414 1.414zm2.12-10.607a1 1 0 010 1.414l-.706.707a1 1 0 11-1.414-1.414l.707-.707a1 1 0 011.414 0zM17 11a1 1 0 100-2h-1a1 1 0 100 2h1zm-7 4a1 1 0 011 1v1a1 1 0 11-2 0v-1a1 1 0 011-1zM5.05 6.464A1 1 0 106.465 5.05l-.708-.707a1 1 0 00-1.414 1.414l.707.707zm1.414 8.486l-.707.707a1 1 0 01-1.414-1.414l.707-.707a1 1 0 011.414 1.414zM4 11a1 1 0 100-2H3a1 1 0 000 2h1z" fill-rule="evenodd" clip-rule="evenodd"></path></svg>
    </button>
    </div>
    <div class="space-y-8 mt-10 text-base">
    <p>
      I'm an engineer & designer with a passion for design systems, problem solving
      & writing. I'm currently working as a frontend engineer at Cudo Ventures, working on <a href="https://cudocompute.com" target="_blank" class="border-b border-white hover:bg-white/20">Cudo Compute</a>.
    </p>
    <p>
      In my spare time I work on building <a class="border-b border-black hover:bg-black/10 dark:border-white dark:hover:bg-white/20">Predictable</a>, a social football league prediction application. When I’m not building,
      I’m obsessing over the details of <a href="https://unlocked.to" target="_blank" class="border-b border-white hover:bg-white/20">Unlocked</a>, a design system built for design systems.
    </p>
    <!-- <div class="flex flex-row space-x-3 text-base">
      <a class="hover:bg-white/20 space-x-2">Twitter <ArrowUpRight/></a>
      <a class="hover:bg-white/20 space-x-2">GitHub <ArrowUpRight/></a>
      <a class="hover:bg-white/20 space-x-2">Instagram <ArrowUpRight/></a>
    </div> -->
  </div>
    <ul role="list" class="border-dashed border-t border-black/30 dark:border-white/30 mt-10 text-base">
      { sortedPosts.map((post) => 
        <li class="py-4 space-y-4 border-dashed border-b border-black/30 dark:border-white/30">
          <a href={post.url} class="flex flex-row justify-between space-x-6">
            <h4 class="">{post.frontmatter.title}</h4>
            <p>{new Date(post.frontmatter.pubDate).toLocaleDateString('en-UK')}</p>
          </a>
        </li>
      )}
    </ul>
  </div>
</Layout>

<script>
var themeToggleDarkIcon = document.getElementById('theme-toggle-dark-icon');
var themeToggleLightIcon = document.getElementById('theme-toggle-light-icon');

// Change the icons inside the button based on previous settings
if (localStorage.getItem('color-theme') === 'dark' || (!('color-theme' in localStorage) && window.matchMedia('(prefers-color-scheme: dark)').matches)) {
    themeToggleLightIcon?.classList.remove('hidden');
} else {
    themeToggleDarkIcon?.classList.remove('hidden');
}

var themeToggleBtn = document.getElementById('theme-toggle');

themeToggleBtn?.addEventListener('click', function() {

    // toggle icons inside button
    themeToggleDarkIcon?.classList.toggle('hidden');
    themeToggleLightIcon?.classList.toggle('hidden');

    // if set via local storage previously
    if (localStorage.getItem('color-theme')) {
        if (localStorage.getItem('color-theme') === 'light') {
            document.documentElement.classList.add('dark');
            localStorage.setItem('color-theme', 'dark');
        } else {
            document.documentElement.classList.remove('dark');
            localStorage.setItem('color-theme', 'light');
        }

    // if NOT set via local storage previously
    } else {
        if (document.documentElement.classList.contains('dark')) {
            document.documentElement.classList.remove('dark');
            localStorage.setItem('color-theme', 'light');
        } else {
            document.documentElement.classList.add('dark');
            localStorage.setItem('color-theme', 'dark');
        }
    }
    
});
</script>